name: Test

on:
  workflow_dispatch:
    inputs:
      environment_sets:
        description: 'Terraform variable sets'
        required: true
        default: 'hub'
      action:
        description: 'Action to deploy (ciapply, ciplan, validadte)'
        required: true
        default: 'ciapply'
env:
  INFRA_UNIT_DIR:  ${{  github.workspace }}/devops-iacaws-terraform-lib/src/projects/platform-public-root
  AWS_ACCESS_KEY_ID:  ${{   secrets.platf5_hub_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{   secrets.platf5_hub_AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION:  ${{   secrets.platf5_hub_AWS_DEFAULT_REGION }}
jobs:
  init-environment:
    runs-on: linux-platform # linux-platform, ubuntu-latest
  

    steps:
    - uses: actions/checkout@v2

    ###################################################
    ###################################################
    - name: HashiCorp - Setup Terraform
      # You may pin to the exact commit or the version.
      # uses: hashicorp/setup-terraform@15ba5bd056f1f2406e37023ca22c75ca08ceeb6e
      uses: hashicorp/setup-terraform@v1.2.0
      with:
        terraform_version: "0.12.28"

    - name: AWS cli install action
      # You may pin to the exact commit or the version.
      # uses: chrislennon/action-aws-cli@1347f1da2852be38fdbea5e6e336f1e297fec7a0
      uses: chrislennon/action-aws-cli@1.1

    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.3

    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1

  ###################################################
  ###################################################
    - name: Configure tf.sh
      run: |
         chmod +x tf.sh

    - name: submodules-init
      # You may pin to the exact commit or the version.
      # uses: snickerbockers/submodules-init@74927a8bb0fe1bb0f1f1e4d102384a8e69f19171
      uses: snickerbockers/submodules-init@v4

      
    - name: Check CI/CD
      id: check_ascicd
      run: |
        ./tf.sh ${{github.event.inputs.environment_sets}} 2.1.dns-base state list | xargs echo
        
    - name: Check CI/CD -
      id: checka
      run: |
        ./tf.sh ${{github.event.inputs.environment_sets}} 2.1.dns-base state list | grep -e data -e module -e resource | grep -v :: | xargs echo
        
        
    - name: Check CI/CD -
      id: checksa
      run: |
        ./tf.sh ${{github.event.inputs.environment_sets}} 2.1.dns-base state list | grep -e data -e module -e resource  | grep -v :: |  wc -l
        

