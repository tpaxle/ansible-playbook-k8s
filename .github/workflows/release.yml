# This is a basic workflow to help you get started with Actions

name: Release Version CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+

env:
  PROJECT_NAME: "api-flask-1"
  AWS_ACCESS_KEY_ID:  ${{   secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{   secrets.AWS_SECRET_ACCESS_KEY }}
  HELM_EXPERIMENTAL_OCI: 1 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  cd_pre:

  upload-assests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - uses: ruby/setup-ruby@v1.64.1
      env:
        ImageOS: ubuntu18
      with:
        bundler-cache: true
        ruby-version: '2.6'

    - name: "Acciidoctor-pdf"
      run: |
        bundle exec asciidoctor-pdf README.adoc -a pdf-theme=first.yml -a pdf-stylesdir=docs/themes/
      
    - name: Create zip file
      run: zip -r GLOBAL-GHE-RUNNER-TEMPLATES.zip README.pdf

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ GITHUB.token }}
      with:
        upload_url: ${{ needs.build.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: GLOBAL-GHE-RUNNER-TEMPLATES.zip
        asset_name: GLOBAL-GHE-RUNNER-TEMPLATES.zip
        asset_content_type: application/zip
